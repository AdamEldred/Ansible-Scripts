---
- name: "SET NTP ON CISCO DEVICES"
  hosts: all
  gather_facts: no
  vars:
    - NTP_Servers: "{{ NTP_Servers_Text.split('\n') }}"

  tasks:
    - name: Set IOS Devices
      block:        
        - name: "GET NTP CONFIGURATION"
          register: get_ntp_config
          ios_command:
            commands:
              - "show running-config | include clock timezone"
              - "show running-config | include clock summer-time"
              - "show running-config | include ntp source"
              - "show running-config | include ntp server"

        - name: "SET TIMEZONE"
          when: "(TimeZone is defined) and (TimeZone != get_ntp_config.stdout_lines[0][0])"
          register: set_TimeZone
          ios_config:
            lines:
              - "{{ TimeZone }}"

        - name: "POSTPONE CONFIGURATION SAVE"
          when: "(set_TimeZone.changed == true)"
          set_fact: configured=true

        - name: "SET SUMMERTIME"
          when: "(SummerTime is defined) and (SummerTime != get_ntp_config.stdout_lines[1][0])"
          register: set_SummerTime
          ios_config:
            lines:
              - "{{ SummerTime }}"

        - name: "POSTPONE CONFIGURATION SAVE"
          when: "(set_TimeZone.changed == true)"
          set_fact: configured=true

        - name: "REMOVE SUMMERTIME"
          when: "(SummerTime is not defined) and (get_ntp_config.stdout_lines[1][0] != \"\")"
          register: remove_SummerTime
          ios_config:
            lines:
              - "no {{ get_ntp_config.stdout_lines[1][0] }}"

        - name: "POSTPONE CONFIGURATION SAVE"
          when: "(remove_SummerTime.changed == true)"
          set_fact: configured=true

        - name: "SET NTP SOURCE"
          when: "(NTP_Source is defined) and (NTP_Source != get_ntp_config.stdout_lines[2][0])"
          register: set_ntp_source
          ios_config:
            lines:
              - "{{ ntp_source }}"

        - name: "POSTPONE CONFIGURATION SAVE"
          when: "(set_ntp_source.changed == true)"
          set_fact: configured=true

        - name: "REMOVE NTP SOURCE"
          when: "(NTP_Source is not defined) and (get_ntp_config.stdout_lines[2][0] != \"\")"
          register: remove_ntp_source
          ios_config:
            lines:
              - "no {{ get_ntp_config.stdout_lines[2][0] }}"

        - name: "POSTPONE CONFIGURATION SAVE"
          when: "(remove_ntp_source.changed == true)"
          set_fact: configured=true

        - name: "SET NTP SERVER"
          when: "(item not in get_ntp_config.stdout_lines[3])"
          with_items: "{{ NTP_Servers }}"
          register: set_ntp_server
          ios_config:
            lines:
              - "{{ item }}"

        - name: "POSTPONE CONFIGURATION SAVE"
          when: "(set_ntp_server.changed == true)"
          set_fact: configured=true

        - name: "REMOVE NTP SERVER"
          when: "(item not in NTP_Servers)"
          with_items: "{{ get_ntp_config.stdout_lines[3] }}"
          register: remove_ntp_server
          ios_config:
            lines:
              - "no {{ item }}"

        - name: "POSTPONE CONFIGURATION SAVE"
          when: "(remove_ntp_server.changed == true)"
          set_fact: configured=true

        - name: "SAVE CONFIGURATION"
          when: "(configured is defined) and (configured == true)"
          register: save_config
          ios_command:
            commands:
              - "write memory"

      when: ansible_network_os == "ios"